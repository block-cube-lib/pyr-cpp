/**
 * @file
 * @author    block
 * @copyright (c) 2017 block.
 */

#ifndef PYRITE_CORE_NONCOPYABLE_HPP
#define PYRITE_CORE_NONCOPYABLE_HPP

namespace pyrite
{

/**
 * class noncopyable cannot be copied.
 */
namespace noncopyable_ //!< protection from unintended ADL
{

class noncopyable
{
protected:
  /**
   * Default constructor.
   * generated by the compiler.
   */
  constexpr noncopyable() = default;

  /**
   * Destructor.
   * generated by the compiler.
   */
  ~noncopyable() = default;

  /**
   * Delete copy constructor.
   */
  noncopyable(noncopyable const&) = delete;

  /**
   * Delete copy assignment operator.
   */
  noncopyable& operator=(noncopyable const&) = delete;
}; // class noncopyable

} // namespace noncopyable_

using noncopyable = pyrite::noncopyable_::noncopyable;

} // namespace pyrite

#endif // PYRITE_CORE_NONCOPYABLE_HPP
